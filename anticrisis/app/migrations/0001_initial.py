# Generated by Django 5.2.4 on 2025-07-19 15:40

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(max_length=255)),
                ('avatar_picture', models.ImageField(blank=True, default='', null=True, upload_to='avatars/')),
                ('banner_picture', models.ImageField(blank=True, default='', null=True, upload_to='banners/')),
                ('followers_count', models.PositiveIntegerField(default=0)),
                ('followings_count', models.PositiveIntegerField(default=0)),
                ('about', models.TextField(blank=True, default='', null=True)),
                ('contact_phone', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('contact_email', models.EmailField(blank=True, default='', max_length=254, null=True)),
                ('website', models.URLField(blank=True, default='', null=True)),
                ('address', models.TextField(blank=True, default='', null=True)),
                ('location_coordinates', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('linked_profiles', models.ManyToManyField(blank=True, to='app.businessprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('is_parent', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['is_active'], name='app_busines_is_acti_405187_idx'), models.Index(fields=['created_at'], name='app_busines_created_7606ad_idx')],
            },
        ),
        migrations.CreateModel(
            name='BusinessProfileType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businessprofile')),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.businesstype')),
            ],
        ),
        migrations.CreateModel(
            name='ClosureTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('depth', models.PositiveIntegerField()),
                ('ancestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ancestor_set', to='app.businesstype')),
                ('descendant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='descendant_set', to='app.businesstype')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('redeem_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('issuer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issued_discounts', to='app.businessprofile')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_discounts', to='app.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='app.businessprofile')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='app.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('business_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='app.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('post_image', models.ImageField(blank=True, default='', null=True, upload_to='posts/')),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='app.businessprofile')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='businessprofile',
            index=models.Index(fields=['business_name'], name='app_busines_busines_2eb75b_idx'),
        ),
        migrations.AddIndex(
            model_name='businessprofiletype',
            index=models.Index(fields=['profile', 'business_type'], name='app_busines_profile_042a7f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='businessprofiletype',
            unique_together={('profile', 'business_type')},
        ),
        migrations.AddIndex(
            model_name='closuretable',
            index=models.Index(fields=['ancestor', 'descendant'], name='app_closure_ancesto_ce3dee_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='closuretable',
            unique_together={('ancestor', 'descendant')},
        ),
        migrations.AddIndex(
            model_name='discount',
            index=models.Index(fields=['issuer', 'recipient'], name='app_discoun_issuer__bbe976_idx'),
        ),
        migrations.AddIndex(
            model_name='discount',
            index=models.Index(fields=['created_at'], name='app_discoun_created_331aaa_idx'),
        ),
        migrations.AddIndex(
            model_name='follow',
            index=models.Index(fields=['follower', 'following'], name='app_follow_followe_4ba366_idx'),
        ),
        migrations.AddIndex(
            model_name='follow',
            index=models.Index(fields=['created_at'], name='app_follow_created_879ed9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='follow',
            unique_together={('follower', 'following')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['business_profile', 'is_read'], name='app_notific_busines_2def54_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='app_notific_created_818794_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['created_at'], name='app_post_created_9d016a_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['likes_count'], name='app_post_likes_c_846bcf_idx'),
        ),
    ]
